# Semantest MCP Bridge Service Kubernetes Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-bridge-service
  namespace: semantest
  labels:
    app: mcp-bridge-service
    component: ai
    version: v1
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: mcp-bridge-service
  template:
    metadata:
      labels:
        app: mcp-bridge-service
        component: ai
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8081"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: semantest-service-account
      containers:
      - name: mcp-bridge-service
        image: semantest/mcp-bridge:latest
        ports:
        - containerPort: 8081
          name: http
        - containerPort: 8082
          name: metrics
        env:
        - name: NODE_ENV
          value: "production"
        - name: MCP_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: semantest-secrets
              key: mcp-endpoint
        - name: MCP_API_KEY
          valueFrom:
            secretKeyRef:
              name: semantest-secrets
              key: mcp-api-key
        - name: AI_MODEL_REGISTRY_URL
          value: "http://model-registry:8080"
        - name: KAFKA_BROKERS
          value: "kafka-cluster:9092"
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: semantest-secrets
              key: redis-url
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 250m
            memory: 256Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 8081
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: tmp
        emptyDir: {}
      - name: logs
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - mcp-bridge-service
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: mcp-bridge-service
  namespace: semantest
  labels:
    app: mcp-bridge-service
    component: ai
spec:
  selector:
    app: mcp-bridge-service
  ports:
  - name: http
    port: 8081
    targetPort: 8081
    protocol: TCP
  - name: metrics
    port: 8082
    targetPort: 8082
    protocol: TCP
  type: ClusterIP